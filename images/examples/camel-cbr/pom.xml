<?xml version="1.0"?>
<!--
  JBoss, Home of Professional Open Source
   Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
   contributors by the @authors tag. See the copyright.txt in the
   distribution for a full listing of individual contributors.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.fabric8.jube.images.examples</groupId>
    <artifactId>parent-project</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>camel-cbr</artifactId>
  <packaging>bundle</packaging>
  <name>Jube :: Examples :: Camel Content-Based Router</name>
  <description>Apache Camel Content-Based Router Example running in simulated standalone OSGi container (POJOsr)
  </description>


  <properties>
    <skipTests>true</skipTests>

    <!-- fabric8 configuration -->
    <docker.dataImage>${env.DOCKER_REGISTRY}/examples/${project.artifactId}:${project.version}</docker.dataImage>
    <fabric8.port.host.jolokia>9803</fabric8.port.host.jolokia>
    <fabric8.label.container>java</fabric8.label.container>
    <fabric8.label.group>quickstarts</fabric8.label.group>

    <!-- jube properties -->
    <docker.baseImage>fabric8/java</docker.baseImage>
    <docker.env.MAIN>org.apache.camel.test.blueprint.Main</docker.env.MAIN>
    <docker.port.JOLOKIA>8778</docker.port.JOLOKIA>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-project</artifactId>
        <version>${fabric8.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-blueprint</artifactId>
    </dependency>
    <!-- we need camel-test-blueprint as it has the main to boot Camel in simulated OSGi using pojosr -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-blueprint</artifactId>
    </dependency>

    <!-- TODO: need to downgrade felix file-install to work around pojosr bug #13 -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.fileinstall</artifactId>
      <version>3.2.6</version>
    </dependency>

    <!-- include logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>${fabric8.version}</version>
        <executions>
          <execution>
            <id>json</id>
            <goals>
              <goal>json</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <image>fabric8/java</image>
          <mergeData>true</mergeData>
          <assemblyDescriptorRef>artifact-with-dependencies</assemblyDescriptorRef>
          <env>
            <MAIN>org.apache.camel.test.blueprint.Main</MAIN>
          </env>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8.jube</groupId>
        <artifactId>jube-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>
</project>